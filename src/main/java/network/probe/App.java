/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package network.probe;

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

public class App {
    public static void main(String[] args) throws Exception {
        analyzeNetworkInterfaces();
    }

    private static void analyzeNetworkInterfaces() throws SocketException {
        Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();
        if (interfaces != null) {
            while (interfaces.hasMoreElements()) {
                analyzeNetworkInterface(interfaces.nextElement());
            }
        }
    }

    private static void analyzeNetworkInterface(NetworkInterface networkInterface) {
        System.out.println("Adding IP addresses for network interface " + networkInterface.getDisplayName());
        try {
            boolean isLoopbackInterface = networkInterface.isLoopback();
            System.out.println("Is this a loopback interface? " + isLoopbackInterface);

            Enumeration<InetAddress> candidates = networkInterface.getInetAddresses();
            while (candidates.hasMoreElements()) {
                InetAddress candidate = candidates.nextElement();
                if (isLoopbackInterface) {
                    if (candidate.isLoopbackAddress()) {
                        if (candidate.isReachable(50)) {
                            System.out.println("Adding loopback address " + candidate);
                        } else {
                            System.out.println("Ignoring unreachable local address on loopback interface " + candidate);
                        }
                    } else {
                        System.out.println("Ignoring remote address on loopback interface " + candidate);
                    }
                } else {
                    if (candidate.isLoopbackAddress()) {
                        System.out.println("Ignoring loopback address on remote interface " + candidate);
                    } else {
                        System.out.println("Adding remote address " + candidate);
                    }
                }
            }
        } catch (Throwable e) {
            throw new RuntimeException(String.format("Could not determine the IP addresses for network interface %s", networkInterface.getName()), e);
        }
    }
}
